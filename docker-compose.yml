services:
  server:
    build:
      context: ./server
      dockerfile: dev.Dockerfile
    ports:
      - "3001:3001"
    environment:
      # - NODE_ENV=development
      # - NODE_ENV=test
      - DEBUG=backend_carevault:*
      - PORT=3001
      - NODE_PATH=/usr/src/shared
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your_jwt_secret_here
      - JWT_EXPIRES_IN=3600
      - REFRESH_TOKEN_EXPIRES_IN=604800
      
    volumes:
      - ./server:/usr/src/app
      - ./shared:/usr/src/shared
      - /usr/src/app/node_modules
    depends_on:
      - db
      - test_db
    restart: always

  client:
    build:
      context: ./client
      dockerfile: dev.Dockerfile
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:3001/api
      - NODE_PATH=/usr/src/shared
    volumes:
      - ./client:/usr/src/app
      - ./shared:/usr/src/shared
      - /usr/src/app/node_modules
    depends_on:
      - server
    restart: always

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: patients_db
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./server/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5433:5432"
    restart: always

  test_db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: patients_test_db
    volumes:
      - test_db_data:/var/lib/postgresql/data
      - ./server/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - 5434:5432
    restart: always

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

volumes:
  db_data:
  test_db_data:
  redis_data:
