name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  client-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
        working-directory: client
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: client/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Run linter
        run: npm run lint
        working-directory: client
      - name: Run tests with coverage
        id: client_tests
        run: |
          start=$SECONDS
          npm test -- --coverage
          duration=$((SECONDS - start))
          echo "duration=$duration" >> $GITHUB_OUTPUT
        working-directory: client
      - name: Check test duration
        if: ${{ steps.client_tests.outputs.duration > 300 }}
        run: echo "Client tests exceeded 5 minutes" && exit 1
      - name: Build project
        run: npm run build
        working-directory: client
      - name: Build documentation
        run: npm run docs
        working-directory: client
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: client/dist
          retention-days: 1
          
      - name: Deploy Client Documentation
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: client/docs
          keep_files: true
          
      - name: Deploy Server Documentation
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: server/docs
          destination_dir: server
          keep_files: true

  server-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
        working-directory: server
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: server/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Run linter
        run: npm run lint
        working-directory: server
      - name: Run tests with coverage
        id: server_tests
        run: |
          start=$SECONDS
          npm test -- --coverage
          duration=$((SECONDS - start))
          echo "duration=$duration" >> $GITHUB_OUTPUT
        working-directory: server
      - name: Check test duration
        if: ${{ steps.server_tests.outputs.duration > 300 }}
        run: echo "Server tests exceeded 5 minutes" && exit 1
      - name: Build documentation
        run: npm run docs
        working-directory: server
      - name: Build project
        run: npm run build:ui
        working-directory: server
        env:
          PROJECT_DIR: ${{ github.workspace }}
          
      - name: Run documentation verification
        run: node ../../__tests__/verify_docs.test.js
        working-directory: server

  context7-docs:
    runs-on: ubuntu-latest
    needs: [client-job, server-job]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install Context7
        run: npm install -g context7
      - name: Generate Context7 Documentation
        run: context7 generate --output ./docs
      - name: Verify Context7 annotations
        run: context7 verify
      - name: Deploy Documentation
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          keep_files: true
